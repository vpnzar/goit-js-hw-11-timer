{"version":3,"sources":["index.js"],"names":["CountdownTimer","constructor","targetDate","selector","startTime","Date","now","newTargetDay","newTargetDate","timerId","setInterval","currentTime","currentDeltaTime","getTime","days","hours","mins","secs","countElemTimer","refs","linkDaysLabel","textContent","linkHoursLabel","linkMinsLabel","linkSecsLabel","clearInterval","time","pad","Math","floor","document","querySelector","init","timerCalc","value","String","padStart","timerOne"],"mappings":";AAiDA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,KAAA,EAAA,OAAA,eAAA,EAAA,EAAA,CAAA,MAAA,EAAA,YAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,GAAA,EAAA,EAjDA,MAAMA,EACJC,YAAYC,EAAYC,GAWZ,EAAA,KAAA,YAAA,KACJC,MAAAA,EAAYC,KAAKC,MACjBC,EAAe,KAAKC,cAAcN,WAElCO,EAAUC,YAAY,KACpBC,MAAAA,EAAcN,KAAKC,MAEnBM,EADYR,EAAYG,EAAaM,WACLF,EAAcP,IAC9C,KAAEU,EAAF,MAAQC,EAAR,KAAeC,EAAf,KAAqBC,GAAS,KAAKC,eAAeN,GAEnDO,KAAAA,KAAKC,cAAcC,YAAcP,EACjCK,KAAAA,KAAKG,eAAeD,YAAcN,EAClCI,KAAAA,KAAKI,cAAcF,YAAcL,EACjCG,KAAAA,KAAKK,cAAcH,YAAcJ,EAClCL,GAAoB,GACtBa,cAAchB,IAEf,OAQYiB,EAAAA,KAAAA,iBAAAA,IAKR,MAAA,CAAEZ,KAJI,KAAKa,IAAIC,KAAKC,MAAMH,EAAQ,QAI1BX,MAHD,KAAKY,IAAIC,KAAKC,MAAOH,EAAQ,MAAyB,OAG9CV,KAFT,KAAKW,IAAIC,KAAKC,MAAOH,EAAQ,KAAoB,MAElCT,KADf,KAAKU,IAAIC,KAAKC,MAAOH,EAAQ,IAAc,SAvCnDP,KAAAA,KAAO,CACVC,cAAeU,SAASC,iBAAiB5B,0BACzCmB,eAAgBQ,SAASC,iBAAiB5B,2BAC1CoB,cAAeO,SAASC,iBAAiB5B,0BACzCqB,cAAeM,SAASC,iBAAiB5B,2BAEtCK,KAAAA,cAAgBN,EAChBC,KAAAA,SAAWA,EAsBlB6B,OACOC,KAAAA,YAEPN,IAAIO,GACKC,OAAAA,OAAOD,GAAOE,SAAS,EAAG,MAUrC,MAAMC,EAAW,IAAIrC,EAAe,CAClCG,SAAU,WACVD,WAAY,IAAIG,KAAK,kBAEvBgC,EAASL","file":"src.30c16171.js","sourceRoot":"..\\src","sourcesContent":["class CountdownTimer {\r\n  constructor(targetDate, selector) {\r\n    this.refs = {\r\n      linkDaysLabel: document.querySelector(`${selector}, [data-value=\"days\"]`),\r\n      linkHoursLabel: document.querySelector(`${selector}, [data-value=\"hours\"]`),\r\n      linkMinsLabel: document.querySelector(`${selector}, [data-value=\"mins\"]`),\r\n      linkSecsLabel: document.querySelector(`${selector}, [data-value=\"secs\"]`),\r\n    };\r\n    this.newTargetDate = targetDate;\r\n    this.selector = selector;\r\n  }\r\n\r\n  timerCalc = () => {\r\n    const startTime = Date.now();\r\n    const newTargetDay = this.newTargetDate.targetDate;\r\n\r\n    const timerId = setInterval(() => {\r\n      const currentTime = Date.now();\r\n      const deltaTime = startTime - newTargetDay.getTime();\r\n      const currentDeltaTime = deltaTime - (currentTime - startTime);\r\n      const { days, hours, mins, secs } = this.countElemTimer(currentDeltaTime);\r\n\r\n      this.refs.linkDaysLabel.textContent = days;\r\n      this.refs.linkHoursLabel.textContent = hours;\r\n      this.refs.linkMinsLabel.textContent = mins;\r\n      this.refs.linkSecsLabel.textContent = secs;\r\n      if (currentDeltaTime <= 0) {\r\n        clearInterval(timerId);\r\n      }\r\n    }, 1000);\r\n  };\r\n  init() {\r\n    this.timerCalc();\r\n  }\r\n  pad(value) {\r\n    return String(value).padStart(2, '0');\r\n  }\r\n  countElemTimer = time => {\r\n    const days = this.pad(Math.floor(time / (1000 * 60 * 60 * 24)));\r\n    const hours = this.pad(Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)));\r\n    const mins = this.pad(Math.floor((time % (1000 * 60 * 60)) / (1000 * 60)));\r\n    const secs = this.pad(Math.floor((time % (1000 * 60)) / 1000));\r\n    return { days, hours, mins, secs };\r\n  };\r\n}\r\nconst timerOne = new CountdownTimer({\r\n  selector: '#timer-1',\r\n  targetDate: new Date('Jul 17, 2019'),\r\n});\r\ntimerOne.init();\r\n"]}