{"version":3,"sources":["index.js"],"names":["CountdownTimer","constructor","targetDate","selector","startTime","Date","now","newTargetDay","newTargetDate","setInterval","currentTime","currentDeltaTime","getTime","days","hours","mins","secs","countElemTimer","refs","linkDaysLabel","textContent","linkHoursLabel","linkMinsLabel","linkSecsLabel","time","pad","Math","floor","document","querySelector","init","timerCalc","value","String","padStart","timerOne"],"mappings":";AA0FA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,KAAA,EAAA,OAAA,eAAA,EAAA,EAAA,CAAA,MAAA,EAAA,YAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,GAAA,EAAA,EA1FA,MAAMA,EACJC,YAAYC,EAAYC,GAWZ,EAAA,KAAA,YAAA,KACJC,MAAAA,EAAYC,KAAKC,MACjBC,EAAe,KAAKC,cAAcN,WACxCO,YAAY,KACJC,MAAAA,EAAcL,KAAKC,MAEnBK,EADYP,EAAYG,EAAaK,WACLF,EAAcN,IAC9C,KAAES,EAAF,MAAQC,EAAR,KAAeC,EAAf,KAAqBC,GAAS,KAAKC,eAAeN,GAEnDO,KAAAA,KAAKC,cAAcC,YAAcP,EACjCK,KAAAA,KAAKG,eAAeD,YAAcN,EAClCI,KAAAA,KAAKI,cAAcF,YAAcL,EACjCG,KAAAA,KAAKK,cAAcH,YAAcJ,GACrC,OAQYQ,EAAAA,KAAAA,iBAAAA,IAKR,MAAA,CAAEX,KAJI,KAAKY,IAAIC,KAAKC,MAAMH,EAAQ,QAI1BV,MAHD,KAAKW,IAAIC,KAAKC,MAAOH,EAAQ,MAAyB,OAG9CT,KAFT,KAAKU,IAAIC,KAAKC,MAAOH,EAAQ,KAAoB,MAElCR,KADf,KAAKS,IAAIC,KAAKC,MAAOH,EAAQ,IAAc,SAnCnDN,KAAAA,KAAO,CACVC,cAAeS,SAASC,iBAAiB1B,0BACzCkB,eAAgBO,SAASC,iBAAiB1B,2BAC1CmB,cAAeM,SAASC,iBAAiB1B,0BACzCoB,cAAeK,SAASC,iBAAiB1B,2BAEtCK,KAAAA,cAAgBN,EAChBC,KAAAA,SAAWA,EAkBlB2B,OACOC,KAAAA,YAEPN,IAAIO,GACKC,OAAAA,OAAOD,GAAOE,SAAS,EAAG,MAUrC,MAAMC,EAAW,IAAInC,EAAe,CAClCG,SAAU,WACVD,WAAY,IAAIG,KAAK,kBAEvB8B,EAASL","file":"src.ca3dae27.js","sourceRoot":"..\\src","sourcesContent":["class CountdownTimer {\r\n  constructor(targetDate, selector) {\r\n    this.refs = {\r\n      linkDaysLabel: document.querySelector(`${selector}, [data-value=\"days\"]`),\r\n      linkHoursLabel: document.querySelector(`${selector}, [data-value=\"hours\"]`),\r\n      linkMinsLabel: document.querySelector(`${selector}, [data-value=\"mins\"]`),\r\n      linkSecsLabel: document.querySelector(`${selector}, [data-value=\"secs\"]`),\r\n    };\r\n    this.newTargetDate = targetDate;\r\n    this.selector = selector;\r\n  }\r\n\r\n  timerCalc = () => {\r\n    const startTime = Date.now();\r\n    const newTargetDay = this.newTargetDate.targetDate;\r\n    setInterval(() => {\r\n      const currentTime = Date.now();\r\n      const deltaTime = startTime - newTargetDay.getTime();\r\n      const currentDeltaTime = deltaTime - (currentTime - startTime);\r\n      const { days, hours, mins, secs } = this.countElemTimer(currentDeltaTime);\r\n\r\n      this.refs.linkDaysLabel.textContent = days;\r\n      this.refs.linkHoursLabel.textContent = hours;\r\n      this.refs.linkMinsLabel.textContent = mins;\r\n      this.refs.linkSecsLabel.textContent = secs;\r\n    }, 1000);\r\n  };\r\n  init() {\r\n    this.timerCalc();\r\n  }\r\n  pad(value) {\r\n    return String(value).padStart(2, '0');\r\n  }\r\n  countElemTimer = time => {\r\n    const days = this.pad(Math.floor(time / (1000 * 60 * 60 * 24)));\r\n    const hours = this.pad(Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)));\r\n    const mins = this.pad(Math.floor((time % (1000 * 60 * 60)) / (1000 * 60)));\r\n    const secs = this.pad(Math.floor((time % (1000 * 60)) / 1000));\r\n    return { days, hours, mins, secs };\r\n  };\r\n}\r\nconst timerOne = new CountdownTimer({\r\n  selector: '#timer-1',\r\n  targetDate: new Date('Jul 17, 2019'),\r\n});\r\ntimerOne.init();\r\n\r\n// const refs = {\r\n//   linkDaysLabel: document.querySelector('[data-value=\"days\"]'),\r\n//   linkHoursLabel: document.querySelector('[data-value=\"hours\"]'),\r\n//   linkMinsLabel: document.querySelector('[data-value=\"mins\"]'),\r\n//   linkSecsLabel: document.querySelector('[data-value=\"secs\"]'),\r\n//   linkLabels: document.querySelectorAll(\".value\"),\r\n// };\r\n\r\n// const timerCalc = () => {\r\n//   const targetTime = new Date(\"Jul 17, 2019\");\r\n//   const startTime = Date.now();\r\n\r\n//   setInterval(() => {\r\n//     const currentTime = Date.now();\r\n//     const deltaTime = startTime - targetTime;\r\n//     const currentDeltaTime = deltaTime - (currentTime - startTime);\r\n//     const { days, hours, mins, secs } = countElemTimer(currentDeltaTime);\r\n//     refs.linkDaysLabel.textContent = days;\r\n//     refs.linkHoursLabel.textContent = hours;\r\n//     refs.linkMinsLabel.textContent = mins;\r\n//     refs.linkSecsLabel.textContent = secs;\r\n//   }, 1000);\r\n// };\r\n\r\n// timerCalc();\r\n\r\n// function pad(value) {\r\n//   return String(value).padStart(2, \"0\");\r\n// }\r\n\r\n// function countElemTimer(time) {\r\n//   const days = pad(Math.floor(time / (1000 * 60 * 60 * 24)));\r\n//   const hours = pad(\r\n//     Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60))\r\n//   );\r\n//   const mins = pad(Math.floor((time % (1000 * 60 * 60)) / (1000 * 60)));\r\n//   const secs = pad(Math.floor((time % (1000 * 60)) / 1000));\r\n//   return { days, hours, mins, secs };\r\n// }\r\n\r\n// const date = Date.now();\r\n// console.log(date);\r\n// 1628948277373;\r\n// 1628948303072;\r\n"]}